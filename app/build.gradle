apply plugin: 'com.android.application'
apply plugin: 'packer'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion Integer.parseInt(project.COMPILE_SDK_VERSION)
    buildToolsVersion project.BUILD_TOOLS_VERSION

    //useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.gw.newstart"
        minSdkVersion Integer.parseInt(project.MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.TARGET_SDK_VERSION)
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debug {
            storeFile file('keystore/release_keystore.jks')
            storePassword '123456'
            keyAlias 'alias'
            keyPassword '123456'
        }
        release {
            storeFile file('keystore/release_keystore.jks')
            storePassword '123456'
            keyAlias 'alias'
            keyPassword '123456'
            // 满足下面两个条件时需要此配置
            // 1. Gradle版本 >= 2.14.1
            // 2. Android Gradle Plugin 版本 >= 2.2.0
            // 作用是只使用旧版签名，禁用V2版签名模式
            v2SigningEnabled false
        }
    }
    buildTypes {
        debug {
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
        release {
            //是否开启混淆
            minifyEnabled true
            //混淆所用的文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //是否zip优化
            zipAlignEnabled true
            //删除一些无用资源
            shrinkResources true
            //签名所用的配置文件
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    compile 'com.android.support:appcompat-v7:25.1.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-beta4'
    testCompile 'junit:junit:4.12'

    compile 'com.orhanobut:logger:1.15'
    compile "com.mcxiaoke.gradle:packer-helper:$packer_version"

    compile "com.jakewharton:butterknife:$butterknife_version"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknife_version"

    compile "com.squareup.okhttp3:okhttp:$okhttp_version"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    compile "com.squareup.retrofit2:retrofit:$retrofit2_version"
    compile "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    compile "com.squareup.retrofit2:adapter-rxjava2:$retrofit2_version"

    compile "io.reactivex.rxjava2:rxjava:2.1.0"
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    //compile "com.trello.rxlifecycle2:rxlifecycle:$rxlifecycle_version"
    // If you want to bind to Android-specific lifecycles
    //compile "com.trello.rxlifecycle2:rxlifecycle-android:$rxlifecycle_version"
    // If you want pre-written Activities and Fragments you can subclass as providers
    //compile "com.trello.rxlifecycle2:rxlifecycle-components:$rxlifecycle_version"


}

//gradle配置
//http://stormzhang.com/android/2016/07/15/android-gradle-config/